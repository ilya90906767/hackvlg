version: '3'

services:

  database:
    image: postgres:15.3
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  backend:
    build:
      context: ./backend
    command: sh -c "
      python manage.py makemigrations &&
      python manage.py migrate --noinput &&
      python manage.py collectstatic --no-input &&
      gunicorn backend.wsgi --bind 0.0.0.0:8000"

    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - SQL_ENGINE=${SQL_ENGINE}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - CONTACT_EMAIL_ADDRESS=${CONTACT_EMAIL_ADDRESS}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    volumes:
      - ./backend:/usr/src/app
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    depends_on:
      - database

  react-app:
  
    build:
      context: ./vlg-app
    volumes: 
      - react_build:/usr/src/app/build
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
    command: npm run build
  nginx: 
    image: nginx:latest
    ports:
      - 80:8080
    volumes: 
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
      - static:/var/www/static
      - media:/var/www/media
    depends_on:
      - backend
      - react-app


               
volumes: 
  react_build:
  static:
  media:
  postgres_data:
